@using System.Activities.Statements
@using WebGrease.Css.Extensions
@model IEnumerable<WEB.Models.PlaceViewModels>
<div id="map"></div>
<script src="~/Scripts/gmaps.js"></script>
<script>

    var markers = [];
    var marker;
    var map;
    var latlng;
    var latlngStr;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'),
            {
                zoom: 6,
                center: { lat: 41.85, lng: -87.65 }
            });

        @foreach (var model in Model)
        {
            <text>
        var markerlatLng = new google.maps.LatLng(@(model.Latitude), @(model.Longitude));
                addMarker(markerlatLng, map);
            </text>

        }

        google.maps.event.addListener(map,
            'click',
            function(event) {
                if(marker!=null)
               marker.setMap(null);
                marker = new google.maps.Marker({
                    position: event.latLng,
                    map: map
                });
            //    $("#Latitude").val(event.latLng.lat());
               // $("#Longitude").val(event.latLng.lng());
            });

        function pinSymbol(color) {
            return {
                path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z M -2,-30 a 2,2 0 1,1 4,0 2,2 0 1,1 -4,0',
                fillColor: color,
                fillOpacity: 1,
                strokeColor: '#000',
                strokeWeight: 2,
                scale: 1,
            };
        }

        function addMarker(location, map) {
            // Add the marker at the clicked location, and add the next-available label
            // from the array of alphabetical characters.
         //   setMapOnAll(null);
            marker = new google.maps.Marker({
                position: location,
                map: map,
                icon: pinSymbol("#183"),
            });
            markers.push(marker);
            marker = null;
        }

        // <input id="foo">


        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBlr6EQIpiTn35E_RJ-TFvfo1vHKR_ajts&callback=initMap"
        type="text/javascript"></script>
